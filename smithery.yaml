name: '@brendancopley/mcp-chain-of-draft-prompt-tool'
description: |-
  A TypeScript-based Model Context Protocol (MCP) server for Chain of Draft
  reasoning with Chain-of-Tools and Pipeline functionality
version: "1.2.0"
build:
  dockerBuildPath: ./
startCommand:
  type: stdio
  configSchema:
    type: object
    title: MCP Server Configuration
    description: Configuration options for the MCP server
    properties:
      LLM_PROVIDER:
        type: string
        description: Choose which provider to use - 'anthropic', 'openai', 'mistral', or 'ollama'
        enum: ['anthropic', 'openai', 'mistral', 'ollama']
        default: 'anthropic'
      LLM_MODEL:
        type: string
        description: Default model to use (provider-specific)
        default: 'claude-3-7-sonnet-latest'
      ANTHROPIC_API_KEY:
        type: string
        description: API key for Anthropic Claude models
      ANTHROPIC_BASE_URL:
        type: string
        description: Base URL for Anthropic API
        default: 'https://api.anthropic.com'
      OPENAI_API_KEY:
        type: string
        description: API key for OpenAI models
      OPENAI_BASE_URL:
        type: string
        description: Base URL for OpenAI API
        default: 'https://api.openai.com'
      MISTRAL_API_KEY:
        type: string
        description: API key for Mistral AI models
      OLLAMA_BASE_URL:
        type: string
        description: Base URL for Ollama local deployment
        default: 'http://localhost:11434'
      COD_MAX_WORDS_PER_STEP:
        type: string
        description: Maximum words per step in Chain of Draft
        default: '5'
      ENFORCE_FORMAT:
        type: string
        description: Whether to enforce format in Chain of Draft
        default: 'true'
      ADAPTIVE_WORD_LIMIT:
        type: string
        description: Whether to use adaptive word limit in Chain of Draft
        default: 'true'
      COD_DB_URL:
        type: string
        description: URL for Chain of Draft analytics database
        default: 'sqlite:///cod_analytics.db'
      COD_EXAMPLES_DB:
        type: string
        description: Path to Chain of Draft examples database
        default: 'cod_examples.db'
      COD_DEFAULT_MODEL:
        type: string
        description: Default model for Chain of Draft
        default: 'claude-3-7-sonnet-latest'
      COD_MAX_TOKENS:
        type: string
        description: Maximum tokens for Chain of Draft
        default: '500'
      COT_MAX_TOOLS_PER_QUERY:
        type: string
        description: Maximum number of tools to use per query in Chain of Tools
        default: '3'
      COT_USE_SEMANTIC_MATCHING:
        type: string
        description: Whether to use semantic matching for tool selection
        default: 'true'
      COT_SEMANTIC_THRESHOLD:
        type: string
        description: Minimum similarity threshold for semantic tool matching (0-1)
        default: '0.5'
      PIPELINE_STORAGE_TYPE:
        type: string
        description: Type of storage to use for pipelines (memory, file, redis)
        default: 'memory'
      PIPELINE_STORAGE_PATH:
        type: string
        description: Path to store pipeline definitions when using file storage
        default: './pipeline-storage'
      PIPELINE_MAX_EXECUTIONS:
        type: string
        description: Maximum number of concurrent pipeline executions
        default: '100'
      PIPELINE_EXECUTION_TIMEOUT:
        type: string
        description: Timeout in milliseconds for pipeline executions
        default: '3600000'
      PIPELINE_HUMAN_INTERACTION_TIMEOUT:
        type: string
        description: Timeout in milliseconds for human interaction in pipelines
        default: '86400000'
    required: []
  commandFunction: |-
    (config) => ({
      command: 'node',
      args: ['dist/index.js'],
      env: {
        NODE_ENV: config.NODE_ENV || 'production',
        LLM_PROVIDER: config.LLM_PROVIDER || 'anthropic',
        LLM_MODEL: config.LLM_MODEL || 'claude-3-7-sonnet-latest',
        ANTHROPIC_API_KEY: config.ANTHROPIC_API_KEY,
        OPENAI_API_KEY: config.OPENAI_API_KEY,
        MISTRAL_API_KEY: config.MISTRAL_API_KEY,
        ANTHROPIC_BASE_URL: config.ANTHROPIC_BASE_URL || 'https://api.anthropic.com',
        OPENAI_BASE_URL: config.OPENAI_BASE_URL || 'https://api.openai.com',
        OLLAMA_BASE_URL: config.OLLAMA_BASE_URL || 'http://localhost:11434',
        COD_MAX_WORDS_PER_STEP: config.COD_MAX_WORDS_PER_STEP || '5',
        ENFORCE_FORMAT: config.ENFORCE_FORMAT || 'true',
        ADAPTIVE_WORD_LIMIT: config.ADAPTIVE_WORD_LIMIT || 'true',
        COD_DB_URL: config.COD_DB_URL || 'sqlite:///cod_analytics.db',
        COD_EXAMPLES_DB: config.COD_EXAMPLES_DB || 'cod_examples.db',
        COD_DEFAULT_MODEL: config.COD_DEFAULT_MODEL || 'claude-3-7-sonnet-latest',
        COD_MAX_TOKENS: config.COD_MAX_TOKENS || '500',
        COT_MAX_TOOLS_PER_QUERY: config.COT_MAX_TOOLS_PER_QUERY || '3',
        COT_USE_SEMANTIC_MATCHING: config.COT_USE_SEMANTIC_MATCHING || 'true',
        COT_SEMANTIC_THRESHOLD: config.COT_SEMANTIC_THRESHOLD || '0.5',
        PIPELINE_STORAGE_TYPE: config.PIPELINE_STORAGE_TYPE || 'memory',
        PIPELINE_STORAGE_PATH: config.PIPELINE_STORAGE_PATH || './pipeline-storage',
        PIPELINE_MAX_EXECUTIONS: config.PIPELINE_MAX_EXECUTIONS || '100',
        PIPELINE_EXECUTION_TIMEOUT: config.PIPELINE_EXECUTION_TIMEOUT || '3600000',
        PIPELINE_HUMAN_INTERACTION_TIMEOUT: config.PIPELINE_HUMAN_INTERACTION_TIMEOUT || '86400000'
      }
    })

clients:
  - claude
  - cursor
  - windsurf
  - cline
  - typescript
